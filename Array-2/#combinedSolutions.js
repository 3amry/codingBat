{"xyBalance-code":"function xyBalance(str){\nlet state = true;\n  for (let i = 0; i < str.length; i++) {\n    if (str.charAt(i) === \"x\") state = false;\n    if (str.charAt(i) === \"y\") state = true;\n  }\n  return state;}","fizzString2":"true","luckySum-code":"function luckySum(a, b, c){\n  if (a === 13)return 0;\n  else if (b === 13)return a;\n  else if (c === 13)return a + b;\n  else return a + b + c;\n}","repeatFront-code":"function repeatFront(str, n){\n  let result = '';\n  for (let i = 0; i < n; i++){\n    result += str.slice(0, n - i);\n  }\n  return result;\n}","conCat-code":"function conCat(a, b){\n  if (a[a.length - 1] === b[0]){\n    return a.concat(b.slice(1));\n  }else return a.concat(b);\n}","sum13":"true","fizzArray3-code":"function fizzArray3(start, end){\n  let result = [];\n  while (end > start){\n    result.push(start);\n    start++;\n  }\n  return result;\n}","extraFront-code":"function extraFront(str) {\n  if (str.length > 1) {\n    return str.slice(0, 2).repeat(3);\n  } else return str.repeat(3);\n}\n","maxTriple":"true","closeFar":"true","post4-code":"function post4(nums) {\n  for (let i = nums.length - 1; i >= 0; i--) {\n    if (nums[i] === 4) return nums.slice(i + 1);\n  }\n}","either24":"true","roundSum":"true","maxBlock-code":"function maxBlock(str) {\n  let block = \"\";\n  let max = \"\";\n  for (let i = 0; i < str.length; i++) {\n    block = str[i];\n    for (let j = i + 1; j < str.length; j++) {\n      if (str[i] === str[j]) block += str[j];\n      if (block.length > max.length) max = block;\n      if (str[i] !== str[j]) break;\n    }\n  }\n  return max.length;\n}","starOut-code":"function starOut(str) {\n  let result = \"\";\n  for (let i = 0; i < str.length; i++) {\n    if (\n      str.charAt(i - 1) === \"*\" ||\n      str.charAt(i + 1) === \"*\" ||\n      str.charAt(i) === \"*\"\n    )\n      continue;\n    result += str.charAt(i);\n  }\n  return result;\n}","midThree-code":"function midThree(nums){\n  return nums.slice(nums.length / 2 - 1, nums.length / 2 + 2);\n}","prependSum-code":"function prependSum(nums){\n  let sum = nums[0] + nums[1];\n  nums.splice(0, 2, sum);\n  return nums\n}","wordEnds-code":"function wordEnds(str, word){\n  let result = '';\n  for (let i = 0; i < str.length; i++){\n    if (str.slice(i, i + word.length) === word)\n      result += str.charAt(i - 1) + str.charAt(i + word.length);\n  }\n  return result;\n}","findTheMedian-code":"function findTheMedian(nums) {\n//   nums = nums.sort();\n  if (nums.length % 2 === 0) {\n    return (nums[nums.length / 2 - 1] + nums[nums.length / 2]) / 2;\n  }\n  if (nums.length % 2 === 1) return nums[Math.round(nums.length / 2 - 1)];\n}","commonEnd":"true","firstHalf-code":"// platform error\nfunction firstHalf(str){\n  return str.slice(0, str.length/2)\n}","sortaSum":"true","sameFirstLast":"true","frontAgain":"true","plusTwo-code":"function plusTwo(a, b){\n  return a.concat(b);\n}","withoutEnd-code":"function withoutEnd(str){\n  return str.slice(1, str.length-1);\n}","countCode-code":"function countCode(str){\n  let count = 0;\n  for (let i = 0; i < str.length-3; i++){\n    if (str.slice(i, i+2) === 'co' &&\n       str[i+3] === 'e') count++;\n  }\n  return count;\n}","xyBalance":"true","findTheMedian":"true","sameStarChar-code":"function sameStarChar(str){\n  for (let i = 0; i < str.length - 1; i++){\n    if (str.charAt(i) === '*' && i !== 0){\n      if str.charAt(i-1) !== str.charAt(i+1)\n      return false;\n    }\n  }\n  return true;\n}","noTeenSum-code":"function noTeenSum(a, b, c){\n  return fixTeen(a) + fixTeen(b) + fixTeen(c);\n}\nfunction fixTeen(num){\n  if (num > 12 && num < 15 || num > 16 && num < 20)return 0;\n  else return num;\n}","withoutX2-code":"function withoutX2(str){\n  if (str[1] === 'x')\n    str = str[0] + str.slice(2);\n  if (str[0] === 'x')\n    str = str.slice(1);\n   return str;\n}","twoChar-code":"function twoChar(str, index){\n  if (str.length - 1 <= index || index < 0) return str.slice(0, 2);\n  return str.slice(index, index + 2);\n}","specialEleven":"true","nTwice":"true","caughtSpeeding-code":"function caughtSpeeding(speed, isBirthday){\n  let firstLimit = 60,\n      secondLimit = 80;\n  if (isBirthday){\n    firstLimit += 5;\n    secondLimit += 5;\n  }\n  if (speed <= firstLimit)return 0;\n  else if (speed <= secondLimit)return 1;\n  else return 2;\n}","modThree-code":"function modThree(nums) {\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] % 2 === 0 && nums[i + 1] % 2 === 0 && nums[i + 2] % 2 === 0)\n      return true;\n    if (nums[i] % 2 === 1 && nums[i + 1] % 2 === 1 && nums[i + 2] % 2 === 1)\n      return true;\n  }\n  return false;\n}","makeAbba-code":"function makeAbba(a, b){\n  return a + b +b +a;\n}","startWord":"true","plusOut-code":"function plusOut(str, word) {\n  let result = \"\";\n  for (let i = 0; i < str.length; i++) {\n    if (str.slice(i, i + word.length) === word) {\n      result += word;\n      i += word.length - 1;\n    } else result += \"+\";\n  }\n  return result;\n}\n","makeOutWord-code":"function makeOutWord(out, word){\n  return out.substring(0, 2) + word + out.substring(2, 4);\n}","prefixAgain-code":"function prefixAgain(str, n){\n  return (str.slice(n).includes(str.slice(0, n)));\n}","bobThere":"true","unlucky1-code":"function unlucky1(nums) {\n  if (\n    (nums[1] === 3 && nums[0] === 1) ||\n    (nums[2] === 3 && nums[1] === 1) ||\n    (nums[nums.length - 1] === 3 && nums[nums.length - 2] === 1)\n  )\n    return true;\n  else return false;\n}","minCat-code":"function minCat(a, b){\n  while (a.length > b.length){\n   a = a.slice(1);\n  }\n  while (a.length < b.length){\n    b = b.slice(1);\n  }\n  return a.concat(b);\n}","specialEleven-code":"function specialEleven(n){\n  return (n % 11 === 0 || n % 11 === 1);\n}","sum28":"true","nearTen":"true","greenTicket-code":"function greenTicket(a, b, c){\n  if (a !== b && b !== c && a !== c)return 0;\n  else if (a === b && b === c)return 20;\n  else if (a === b || b === c || a === c)return 10;\n}","squirrelPlay-code":"function squirrelPlay(temp, isSummer){\n  if (isSummer) return (temp >= 60 && temp <= 100);\n  else return (temp >= 60 && temp <= 90);\n}","countEvens-code":"function countEvens(nums){\n  let count = 0;\n  for (let value of nums){\n    if (value % 2 === 0) count++;\n  }\n  return count;\n}","makeLast-code":"function makeLast(nums){\n  let result = [];\n  for (let i = 0; i < nums.length * 2; i++){\n    result[i] = 0;\n  }\n  result[result.length - 1] = nums[nums.length - 1];\n  return result;\n}","middleThree":"true","centeredAverage-code":"function centeredAverage(nums){\n  let sum = 0;\n  for (let value of nums) sum += value;\n  sum = sum - Math.max(...nums) - Math.min(...nums);\n  return sum / (nums.length - 2);\n}","teenSum":"true","twoTwo":"true","makePi":"true","midThree":"true","helloName":"true","blackjack":"true","evenlySpaced-code":"function evenlySpaced(a, b, c) {\n  return max(a, b, c) - mid(a, b, c) === mid(a, b, c) - min(a, b, c);\n}\nfunction max(a, b, c) {\n  return Math.max(a, b) > c ? Math.max(a, b) : c;\n}\nfunction min(a, b, c) {\n  return Math.min(a, b) < c ? Math.min(a, b) : c;\n}\nfunction mid(a, b, c) {\n  return a + b + c - min(a, b, c) - max(a, b, c);\n}\n","frontAgain-code":"function frontAgain(str){\n  if (str.length > 1){\n    return (str.slice(0, 2) === str.slice(str.length - 2));\n  }else return false;\n}","closeFar-code":"function closeFar(a, b, c){\n  return (Math.abs(a - b) < 2 && Math.abs(a - c) > 1 && Math.abs(b - c) > 1\n          || Math.abs(a - c) < 2 && Math.abs(a - b) > 1 && Math.abs(b - c) > 1)\n}","lastDigit":"true","gHappy":"true","old35":"true","right2-code":"function right2(str){\n  return str.slice(str.length - 2) + str.slice(0, str.length - 2);\n}","loneSum-code":"function loneSum(a, b, c){\n  let result = 0;\n  if (a !== b && a !== c) result += a;\n  if (b !== c && b !== a) result += b;\n  if (c !== b && c !== a) result += c;\n  return result;\n}","catDog-code":"function catDog(str){\n  let countCat = 0;\n  let countDog = 0;\n  for (let i = 0; i < str.length; i++){\n    if (str.slice(i, i+3) === 'cat')\n      countCat++;\n    if (str.slice(i, i+3) === 'dog')\n      countDog++;\n  }\n  return countCat === countDog;\n}","frontPiece":"true","has12-code":"function has12(nums) {\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] === 1) return nums.slice(i).includes(2);\n  }\n  return false;\n}","no14":"true","either24-code":"function either24(nums){\n  let state = 0;\n  for (let i = 0; i < nums.length; i++){\n    if (nums[i] === 2 && nums[i + 1] === 2)state++;\n    if (nums[i] === 4 && nums[i + 1] === 4)state++;\n  }\n  return (state === 1);\n}","more20":"true","makeAbba":"true","blueTicket-code":"function blueTicket(a, b, c){\n  if (a + b === 10 || b + c === 10 || a + c === 10)return 10;\n  else if ((a + b) - (b + c) === 10 || (a + b) - (a + c) === 10)return 5;\n  else return 0;\n}","hasBad-code":"function hasBad(str){\n  let reg = 'bad';\n  return (str.slice(0, reg.length + 1).includes(reg));\n}","zipZap":"true","makeBricks-code":"function makeBricks(small, big, goal){\n  big = big * 5;\n  if (big + small < goal)return false;\n    return (goal % 5 <= small); \n}","withoutString-code":"function withoutString(base, remove) {\n  let result = \"\";\n  for (let i = 0; i < base.length; i++) {\n    if (\n      base.slice(i, i + remove.length).toLowerCase() === remove.toLowerCase()\n    ) {\n      i += remove.length - 1;\n      continue;\n    }\n    result += base.charAt(i);\n  }\n  return result;\n}","starOut":"true","cigarParty":"true","sumNumbers-code":"function sumNumbers(str){\nlet sum = 0;\n  let temp = \"\";\n  for (let i = 0; i < str.length; i++) {\n    let digit = parseInt(str[i]);\n    if (digit) {\n      if (parseInt(str[i + 1])) {\n        temp += str[i];\n      } else {\n        temp += str[i];\n        sum += parseInt(temp);\n        temp = \"\";\n      }\n    }\n  }\n  return sum;\n}}","rotateLeft3-code":"function rotateLeft3(nums){\n  return [...nums.slice(1), nums[0]];\n}","countTriple-code":"function countTriple(str){\n  let count = 0;\n  for (let i = 0; i < str.length - 2; i++) {\n    if (str[i] === str[i + 1] && str[i] === str[i + 2]) count++;\n  }\n  return count;\n}","fizzString2-code":"function fizzString2(n){\n  if (n % 5 === 0 && n % 3 === 0)return 'FizzBuzz!';\n  else if (n % 5 === 0)return 'Buzz!';\n  else if (n % 3 === 0)return 'Fizz!';\n  else return (n + '!');\n}","withoutX":"true","fizzString-code":"function fizzString(str){\n  if (str[0] === 'f' && str[str.length -1] === 'b')return 'FizzBuzz';\n  else if (str[0] === 'f')return 'Fizz';\n  else if (str[str.length -1] === 'b')return 'Buzz';\n  else return str;\n}","no23":"true","noTeenSum":"true","seeColor":"true","teaParty-code":"function teaParty(tea, candy){\n  if (tea < 5 || candy < 5)return 0;\n  else if (tea >= 2 * candy || candy >= 2 * tea)return 2;\n  else return 1;\n}","getSandwich":"true","zeroMax":"true","doubleChar-code":"function doubleChar(str){\n  let result = '';\n  for (let char of str){\n    result += char + char;\n  }\n  return result;\n}","matchUp-code":"// platform error\nfunction matchUp(a, b){\n  let result = 0;\n  for (let i = 0; i < a.length; i++){\n    let temp = Math.abs(a[i] - b[i])\n    if (temp < 3 && temp > 0) result++;\n  }\n  return result;\n}","answerCell":"true","zeroFront-code":"function zeroFront(nums) {\n  let zeros = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] === 0) {\n      nums[i] = nums[zeros];\n      nums[zeros] = 0;\n      zeros++;\n    }\n  }\n  return nums;\n}","sameEnds-code":"// platform error\nfunction sameEnds(nums) {\n  let result = \"\";\n  for (let i = 0; i <= nums.length / 2; i++) {\n    if (nums.slice(0, i) === nums.slice(nums.length - i))\n      result = nums.slice(0, i);\n  }\n  return result;\n}","middleTwo-code":"// paltform error\nfunction middleTwo(str) {\n  let middle = str.length / 2;\n  return str.slice(middle - 1, middle + 1);\n}","answerCell-code":"function answerCell(isMorning, isMom, isAsleep){\n  if (isAsleep) return false;\n  if (isMom) return true;\n  if (isMorning)return false;\n  else return true;\n}","middleWay-code":"function middleWay(a, b){\n  return [a[1], b[1]];\n}","teenSum-code":"function teenSum(a, b){\n  let sum = a + b;\n  if (a >= 13 && a <= 19 || b >= 13 && b <= 19) return 19;\n  else return sum;\n}","start1-code":"function start1(a, b){\n  let count1 = 0;\n  if (a[0] === 1)count1++;\n  if (b[0] === 1)count1++;\n  return count1;\n}","alarmClock":"true","sum67-code":"function sum67(nums) {\n  let sum = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] === 6) {\n      // add before 6 part\n      let part = nums.splice(0, i);\n      for (let num of part) sum += num;\n      // delete 67 part\n      let count = nums.indexOf(7) + 1;\n      nums.splice(0, count);\n      // reset index after splice ;)\n      i = 0;\n    }\n  }\n  for (let value of nums) sum += value;\n  return sum;\n}","makeTags":"true","withoutEnd2-code":"function withoutEnd2(str){\n  return str.slice(1, str.length - 1);\n}","swapEnds":"true","inOrder":"true","xyzMiddle-code":"function xyzMiddle(str){\n  for (let i = 0; i < str.length - 2; i++) {\n    if (str.slice(i, i + 3) === \"xyz\" && inMiddle(i, str)) return true;\n  }\n  return false;\n}\nfunction inMiddle(i, str) {\nlet front = str.length - (i + 3),\n    back = i,\n    difference = Math.abs(front - back);\n  return difference <= 1;}\n","haveThree-code":"function haveThree(nums){\n  let count = 0;\n  for (let i = 0; i < nums.length; i++){\n    if (nums[i] === 3){\n      count++\n      if (nums[i + 1] === 3)return false;\n    }\n  }\n  return (count === 3);\n}","start1":"true","gHappy-code":"function gHappy(str){\n  let happy = true;\n  for (let i = 0; i < str.length; i++){\n    if (str[i] === 'g'){\n      if (str[i+1] !== 'g' && str[i-1] !== 'g') happy = false;\n    }\n  }\n  return happy;\n}","rotateLeft3":"true","wordEnds":"true","findLowestIndex-code":"function findLowestIndex(nums){\n  return nums.indexOf(Math.min(...nums));\n}","biggerTwo-code":"function biggerTwo(a, b){\n  let suma = a.reduce((a, b) => a + b);\n  let sumb = b.reduce((a, b) => a + b);\n  return sumb > suma ? b : a;\n}","left2":"true","frontPiece-code":"function frontPiece(nums){\n  if (nums.length < 2) return nums;\n  else return [nums[0], nums[1]];\n}","fix23":"true","withoutEnd":"true","maxBlock":"true","nearTen-code":"function nearTen(num){\n  return (num % 10 === 2 || num % 10 === 1 || num % 10 === 0 || num % 10 === 9 || num % 10 === 8);\n}","luckySum":"true","startWord-code":"function startWord(str, word){\n  if (str.slice(0, word.length)=== word ||\n     str.slice(1, word.length)=== word.slice(1))\n    return str.slice(0, word.length);\n  else return '';\n}","sameStarChar":"true","sumNumbers":"true","lucky13-code":"function lucky13(nums){\n  for (let value of nums){\n    if (value === 1 || value === 3)return false;\n  }\n  else return true;\n}","double23":"true","repeatFront":"true","oneTwo-code":"function oneTwo(str){\n  let result = '';\n  for (let i = 0; i < str.length - 2; i += 3){\n    result += str.slice(i+1, i+3) + str.charAt(i);\n  }\n  return result;\n}","caughtSpeeding":"true","deFront":"true","makeMiddle-code":"function makeMiddle(nums){\n  return nums.slice(nums.length / 2 - 1, nums.length / 2 + 1);\n}","shareDigit":"true","dateFashion-code":"function dateFashion(you, date){\n  if (date <= 2 || you <= 2) return 0;\n  else if (you >= 8 || date >= 8)return 2;\n  else return 1;\n}","no23-code":"function no23(nums){\n  let state = true;\n  for (let value of nums)\n    if (value === 2 || value === 3)state = false;\n  return state;\n}","maxEnd3-code":"function maxEnd3(nums){\n  let max = (nums[0] > nums[2] ? nums[0] : nums[2]),\n      result = [];\n  for (let value of nums){\n    result.push(max);\n  }\n  return result;\n}","front11-code":"function front11(a, b){\n  let result = [];\n  if (a.length > 0) result.push(a[0]);\n  if (b.length > 0) result.push(b[0]);\n  return result;\n}","mixString":"true","roundSum-code":"function roundSum(a, b, c){\n  return round10(a) + round10(b) + round10(c);\n}\nfunction round10(num){\n  if (num % 10 >= 5)return num += 10 - num % 10;\n  else if (num % 10 < 5)return num -= num % 10;\n}","love6":"true","sumDigits":"true","alarmClock-code":"function alarmClock(day, vacation){\n  if (vacation){\n    if (day === 0 || day === 6) return 'off';\n    else return '10:00';\n  }\n  else if (day === 0 || day === 6) return '10:00';\n  else return '7:00';\n}","extraFront":"true","atFirst-code":"function atFirst(str){\n  while (str.length < 2){\n    str += '@';\n  }\n  return str.slice(0, 2); \n}","endOther":"true","repeatSeparator":"true","pre4":"true","blueTicket":"true","has77":"true","maxEnd3":"true","equalIsNot":"true","firstTwo-code":"function firstTwo(str){\n  return str.slice(0,2);\n}","tenRun-code":"function tenRun(nums) {\n  let temp = 1;\n  let result = [];\n  for (let value of nums) {\n    if (value % 10 === 0) temp = value;\n    if (value % 10 !== 0 && temp !== 1) result.push(temp);\n    else result.push(value);\n  }\n  return result;\n}","withoutEnd2":"true","make2":"true","makeChocolate":"true","comboString":"true","twoAsOne-code":"function twoAsOne(a, b, c){\n  return (a + b === c || b + c === a || a + c === b);\n}","notAlone":"true","lastTwo-code":"function lastTwo(str) {\n  if (str.length > 1) {\n    return (\n      str.slice(0, str.length - 2) + str[str.length - 1] + str[str.length - 2]\n    );\n  } else return str;\n}","has23":"true","doubleChar":"true","biggerTwo":"true","xyzThere-code":"function xyzThere(str){\n  for (let i = 0; i < str.length -2; i++) {\n    if (str.slice(i, i + 3) === \"xyz\" && str.charAt(i-1) !== \".\") return true;\n  }\n  return false;\n}","haveThree":"true","love6-code":"function love6(a, b){\n  let sum = a + b,\n      diff = Math.abs(a - b);\n  return (a === 6 || b === 6 || sum === 6 || diff === 6);\n}","extraEnd":"true","firstTwo":"true","sumLimit-code":"function sumLimit(a, b){\n  let sum = a + b;\n  if (sum.toString().length === a.toString().length)return sum;\n  else return a;\n}","endsLy-code":"function endsLy(str){\n  let end = 'ly';\n  str = str.toLowerCase();\n  return (str.slice(str.length - 2) === end);\n}","zeroMax-code":"function zeroMax(nums) {\n  let temp = 0;\n  for (let i = nums.length - 1; i >= 0; i--) {\n    if (nums[i] % 2 === 1 && nums[i] > temp) temp = nums[i];\n    if (nums[i] === 0) nums[i] = temp;\n  }\n  return nums;\n}","tripleUp-code":"function tripleUp(nums) {\n  for (let i = 0; i < nums.length - 2; i++) {\n    if (nums[i] - nums[i + 1] === -1 && nums[i] - nums[i + 2] === -2)\n      return true;\n  }\n  return false;\n}","has22-code":"function has22(nums){\n  for (let i = 0; i < nums.length; i++){\n    if (nums[i] === 2 && nums[i + 1] === 2)return true;\n  }\n  else return false;\n}","equalIsNot-code":"function equalIsNot(str){\n  let count = 0;\n  for (let i = 0; i < str.length; i++){\n    if (str.slice(i, i + 2) === 'is')count++;\n    if (str.slice(i, i + 3) === 'not')count--;\n  }\n  return count === 0;\n}","in1To10":"true","countHi":"true","countEvens":"true","teaParty":"true","withoutTen":"true","notReplace-code":"function notReplace(str) {\n  let result = \"\";\n  for (let i = 0; i < str.length; i++) {\n    if (\n      (i - 1 >= 0 && isLetter(str[i - 1])) ||\n      (i + 2 < str.length && isLetter(str[i + 2]))\n    )\n      result += str[i];\n    else if (str.slice(i, i + 2) === \"is\") {\n      result += \"is not\";\n      i++;\n    }\n    else result += str[i];\n  }\n  return result;\n}\nfunction isLetter(char) {\n  return char.toLowerCase() !== char.toUpperCase();\n}","only14-code":"function only14(nums){\n  for (let value of nums){\n    if (value !== 1 && value !== 4)return false;\n  }\n  return true;\n}","bigDiff":"true","xyzMiddle":"true","less20":"true","comboString-code":"function comboString(a, b){\n  if (a.length > b.length){\n    return  b + a + b;\n  }else return a + b + a;\n}","reverse3-code":"function reverse3(nums){\n  return nums.reverse();\n}","has77-code":"function has77(nums) {\n  for (let i = 0; i < nums.length; i++) {\n    if (\n      (nums[i] === 7 && nums[i + 1] === 7) ||\n      (nums[i] === 7 && nums[i + 2] === 7)\n    )\n      return true;\n  }\n  return false;\n}","makeChocolate-code":"function makeChocolate(small, big, goal){\n  big = big * 5;\n  if (goal > big + small)return -1;\n  else if (goal < big) return goal % 5;\n  else return goal - big;\n}","notReplace":"true","inOrderEqual-code":"function inOrderEqual(a, b, c, equalOk){\n  if (equalOk)return (c >= b && b >= a);\n  else return (c > b && b > a);\n}","lessBy10":"true","redTicket":"true","double23-code":"function double23(nums){\n  let count2 = 0,\n      count3 = 0;\n  for (let value of nums){\n    if (value === 2) count2++;\n    if (value === 3) count3++;\n  }\n  if (count2 > 1 || count3 > 1)return true;\n  else return false;\n}","countTriple":"true","extraEnd-code":"function extraEnd(str){\n  let end = str.slice(str.length -2);\n  let result = '';\n  for (let i = 0; i < 3; i++){\n    result += end;\n  }\n  return result;\n}","prefixAgain":"true","oneTwo":"true","unlucky1":"true","withoutX2":"true","right2":"true","has22":"true","twoAsOne":"true","more14":"true","evenOdd":"true","squirrelPlay":"true","front11":"true","modThree":"true","more14-code":"function more14(nums){\n  let count1 = 0,\n      count4 = 0;\n  for (let value of nums){\n    if (value === 1)count1++;\n    if (value === 4)count4++;\n  }\n  return (count1 > count4);\n}","redTicket-code":"function redTicket(a, b, c){\n  if (a === b && b === c && c === 2)return 10;\n  else if (a === b && b === c)return 5;\n  else if (a !== b && a !== c)return 1;\n  else return 0;\n}","tripleUp":"true","lastChars":"true","nTwice-code":"function nTwice(str, n){\n  return str.slice(0, n) + str.slice(str.length - n);\n}","minCat":"true","old35-code":"function old35(n){\n  return (n % 3 === 0 && n % 5 !== 0 || n % 5 === 0 && n % 3 !== 0);\n}","sumDigits-code":"function sumDigits(str) {\n  let result = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i].toLowerCase() === str[i].toUpperCase())\n      result += parseInt(str[i]);\n  }\n  return result;\n}","makeTags-code":"function makeTags(tag, word){\n  return  `<${tag}>${word}</${tag}>`;\n}","fix23-code":"function fix23(nums){\n  let result = [];\n  for (let i = 0; i < nums.length; i++){\n    if (nums[i] === 3 && nums[i - 1] === 2)\n      result.push(0);\n    else result.push(nums[i]);\n  }\n  return result;\n}","make2-code":"function make2(a, b){\n  let result = [];\n  let arr = a.concat(b);\n  for (let value of arr){\n    if (result.length < 2) \n      result.push(value);\n    else break;\n  }\n  return result;\n}","fizzArray-code":"function fizzArray(n){\n  let arr = [];\n  for (let i = 0; i < n; i++){\n    arr.push(i);\n  }\n  return arr;\n}","countYZ-code":"function countYZ(str) {\n  let count = 0;\n  str = str.toLowerCase();\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === \"y\" || str[i] === \"z\")\n      if (\n        str.charAt(i + 1).toLowerCase() === str.charAt(i + 1).toUpperCase() ||\n        i === str.length - 1\n      )\n        count++;\n  }\n  return count;\n}","endOther-code":"function endOther(a, b){\nif (a.toLowerCase().slice(-b.length) === b.toLowerCase()) {\n    return true;\n  }\n\nif (b.toLowerCase().slice(-a.length) === a.toLowerCase()) {\n    return true;\n  } \nelse return false;\n}","lastChars-code":"function lastChars(a, b){\n  if (a === '') a += '@';\n  if (b === '') b += '@';\n  return a[0] + b[b.length - 1];\n}","makePi-code":"function makePi(){\n  return [3, 1, 4];\n}","sum67":"true","twoTwo-code":"function twoTwo(nums) {\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] === 2 && nums[i + 1] !== 2 && nums[i - 1] !== 2) return false;\n  }\n  return true;\n}","inOrder-code":"function inOrder(a, b, c, bOk){\n  if (bOk) return (c > b);\n  else return (b > a && c > b);\n}","xyzThere":"true","fizzArray2-code":"function fizzArray2(n){\n  let arr = [];\n  for (let i = 0; i < n; i++){\n    arr.push(`${i}`);\n  }\n  return arr;\n}","repeatEnd":"true","makeMiddle":"true","firstLast6-code":"function firstLast6(nums){\n  return (nums[0] === 6 || nums[nums.length - 1] === 6);\n}","repeatEnd-code":"function repeatEnd(str, n){\n  let result = '';\n  for (let i = 0; i < n; i++){\n    result += str.slice(str.length - n);\n  }\n  return result;\n}","maxMod5-code":"function maxMod5(a, b){\n  if (a === b)return 0;\n  else if (a % 5 === b % 5){\n    return (a < b) ? a : b;\n  }\n  else return (a > b) ? a : b;\n}","sumLimit":"true","pre4-code":"function pre4(nums){\n  let result = [];\n  for (let value of nums){\n    if (value === 4) break;\n    result.push(value);\n  }\n  return result;\n}","withoutDoubles":"true","sum2":"true","zipZap-code":"function zipZap(str){\n  let result = '';\n  for (let i = 0; i < str.length; i++){\n    if (str.charAt(i - 1)=== 'z' && str.charAt(i + 1)=== 'p')\n      continue;\n    result += str.charAt(i);\n  }\n  return result;\n}","notAlone-code":"function notAlone(nums, val) {\n  for (let i = 1; i < nums.length - 1; i++) {\n    if (nums[i] === val && nums[i - 1] !== val)\n      nums[i] = Math.max(nums[i - 1], nums[i + 1]);\n  }\n  return nums;\n}","theEnd":"true","sameFirstLast-code":"function sameFirstLast(nums){\n  if (nums.length > 0) {\n    return (nums[0] === nums[nums.length - 1]);\n  }\n  else return false;\n}","tenRun":"true","withoutDoubles-code":"function withoutDoubles(die1, die2, noDoubles){\n  if (noDoubles && die1 === die2){\n    if (die1 === 6)die1 = 1;\n    else die1++;\n  }\n  sum = die1 + die2;\n  return sum;\n}","swapEnds-code":"function swapEnds(nums){\n  if (nums.length === 1)return nums;\n  return [nums[nums.length - 1], ...nums.slice(1, nums.length - 1), nums[0]];\n}","repeatSeparator-code":"function repeatSeparator(word, sep, count){\n  if (count === 1) return word;\n  let result = '';\n  for (let i = 0; i < count; i++){\n    result += word + sep;\n    }\n  return result.slice(0, -sep.length);\n}","zeroFront":"true","countCode":"true","shiftLeft-code":"function shiftLeft(nums){\n  if (nums.length === 0) return nums;\n  return [...nums.slice(1), nums[0]];\n}","deFront-code":"function deFront(str){\n  if (str[0] === 'a' && str[1] === 'b') return str;\n  else if (str[0] !== 'a' && str[1] !== 'b')\n    return str.slice(2); \n  else if (str[0] === 'a') \n    return str[0] + str.slice(2) ;\n  else \n    return str.slice(1);\n}","lastTwo":"true","loneSum":"true","without2-code":"function without2(str){\n  if (str.length === 1) return str;\n  else if (str.slice(0, 2) === str.slice(str.length - 2))\n    return str.slice(2);\n  else return str;\n}","shareDigit-code":"function shareDigit(a, b){\n  let leftA = (a / 10) | 0,\n      leftB = (b / 10) | 0,\n      rightA = a % 10,\n      rightB = b % 10;\n  return (leftA === leftB || leftA === rightB || rightA == rightB || rightA == leftB);\n}","isEverywhere-code":"function isEverywhere(nums, val){\n  for (let i = 0; i < nums.length - 1; i++){\n    if (nums[i] !== val && nums[i + 1] !== val) return false;\n  }\n  return true;\n}","plusTwo":"true","middleWay":"true","withoutTen-code":"function withoutTen(nums) {\n  let arr = [];\n  let zeros = [];\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] !== 10) arr.push(nums[i]);\n    if (nums[i] === 10) zeros.push(0);\n  }\n  return arr.concat(zeros);\n}","evenOdd-code":"function evenOdd(nums) {\n  let evens = 0;\n  let temp = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] % 2 === 0) {\n      temp = nums[i];\n      nums[i] = nums[evens];\n      nums[evens] = temp;\n      evens++;\n    }\n  }\n  return nums;\n}","findLowestIndex":"true","middleThree-code":"function middleThree(str){\n  let middle = str.length / 2;\n  return str.slice(middle - 1, middle + 2);\n}","left2-code":"function left2(str){\n  return str.slice(2) + str.slice(0, 2);\n}","has12":"true","atFirst":"true","shiftLeft":"true","bigDiff-code":"function bigDiff(nums){\n  return Math.max(...nums) - Math.min(...nums);\n}","fizzArray":"true","countYZ":"true","no14-code":"function no14(nums){\n  if (nums.includes(1) && nums.includes(4)) return false;\n  return true;\n}","fizzArray2":"true","sum13-code":"function sum13(nums){\n  let sum = 0;\n  for (let i = 0; i < nums.length; i++){\n    if (nums[i] !== 13 && nums[i - 1] !== 13)\n      sum += nums[i];\n  }\n  return sum;\n}","withoutX-code":"function withoutX(str){\n  if (str[0] === 'x')\n    str = str.slice(1);\n   if (str[str.length - 1] === 'x')\n    str = str.slice(0, str.length - 1);\n   return str;\n}","sum3":"true","mixString-code":"function mixString(a, b){\n  let result = \"\";\n  let maxLength = Math.max(a.length, b.length);\n  for (let i = 0; i < maxLength; i++) {\n    result += a.charAt(i) + b.charAt(i);\n  }\n  return result;\n}","has23-code":"function has23(nums){\n  let state = false;\n  for (let value of nums){\n    if (value === 2 || value === 3)state = true;\n  }\n  return state;\n}","sum2-code":"function sum2(nums){\n  if (nums.length === 0)return 0;\n  if (nums.length === 1)return nums[0];\n  else return nums[0] + nums[1];\n}","makeEnds":"true","theEnd-code":"function theEnd(str, front){\n  if (front){\n    return str[0];\n  }else return str[str.length -1];\n}","sortaSum-code":"function sortaSum(a, b){\n  let result = a + b;\n  if (result > 9 && result < 20)return 20;\n  else return result;\n}","evenlySpaced":"true","bobThere-code":"function bobThere(str){\n  for (let i = 0; i < str.length - 2; i++){\n    if (str.charAt(i) === 'b' && str.charAt(i+2) === 'b')\n      return true;\n  }\n  return false;\n}","in1To10-code":"function in1To10(n, outsideMode){\n  if (outsideMode)return (n <= 1 || n >= 10);\n  else return (n >= 1 && n <= 10)\n}","lucky13":"true","fizzArray3":"true","nonStart-code":"function nonStart(a, b){\n  return a.slice(1) + b.slice(1);\n}","sum3-code":"function sum3(nums){\n  let result = 0;\n  for (let value of nums)result += value;\n  return result;\n}","mirrorEnds-code":"function mirrorEnds(string) {\n  let result = \"\";\n  let temp = \"\";\n  for (let i = 0; i < string.length; i++) {\n    temp = string[i] + temp;\n    if (temp === string.slice(string.length - i - 1))\n      result = string.slice(0, i + 1);\n  }\n  return result;\n}","countHi-code":"function countHi(str){\n  let count = 0;\n  for (let i = 0; i < str.length; i++){\n    if (str.slice(i, i + 2) === 'hi')\n      count++;\n  }\n  return count;\n}","lessBy10-code":"function lessBy10(a, b, c){\n  return (Math.abs(a-b) >= 10 || Math.abs(a-c) >= 10 || Math.abs(b-c) >= 10);\n}","only14":"true","isEverywhere":"true","without2":"true","inOrderEqual":"true","makeLast":"true","more20-code":"function more20(n){\n  return (n % 20 === 1 || n % 20 === 2);\n}","dateFashion":"true","centeredAverage":"true","hasBad":"true","lastDigit-code":"function lastDigit(a, b){\n  return (a % 10 === b % 10);\n}","greenTicket":"true","fizzBuzz-code":"function fizzBuzz(start, end) {\n  let result = [];\n  for (let i = start; i < end; i++) {\n    if (i % 5 === 0 && i % 3 === 0) result.push(\"FizzBuzz\");\n    else if (i % 5 === 0) result.push(\"Buzz\");\n    else if (i % 3 === 0) result.push(\"Fizz\");\n    else result.push(`${i}`);\n  }\n  return result;\n}","seeColor-code":"// need regexp\nfunction seeColor(str){\n  if (str.slice(0, 3) === 'red') return 'red';\n  if (str.slice(0, 4) === 'blue') return 'blue';\n  else return '';\n}","less20-code":"function less20(n){\n  return (n % 20 === 19 || n % 20 === 18);\n}","makeBricks":"true","firstLast6":"true","fizzBuzz":"true","post4":"true","sum28-code":"function sum28(nums){\n  let sum = 0;\n  for (let value of nums){\n    if (value === 2)sum += 2;\n  }\n  return (sum === 8);\n}","maxTriple-code":"function maxTriple(nums) {\n  let big = 0;\n  let midIndex = Math.round(nums.length / 2) - 1;\n  nums[0] > nums[nums.length - 1]\n    ? (big = nums[0])\n    : (big = nums[nums.length - 1]);\n  return big > nums[midIndex] ? big : nums[midIndex];\n}","catDog":"true","prependSum":"true","makeOutWord":"true","getSandwich-code":"function getSandwich(str){\n  let first = str.indexOf('bread');\n  let last = str.lastIndexOf('bread');\n  if (first !== -1 && last !== -1){\n    return str.slice(first + 5, last);\n  }\n  return '';\n}","reverse3":"true","makeEnds-code":"function makeEnds(nums){\n  return [nums[0], nums[nums.length - 1]];\n}","endsLy":"true","conCat":"true","maxMod5":"true","cigarParty-code":"function cigarParty(cigars, isWeekend){\n  if (isWeekend) return cigars >= 40;\n  else return (cigars >= 40 && cigars <= 60);\n}","fizzString":"true","helloName-code":"function helloName(name){\n  return \"Hello \" + name + \"!\";\n}","twoChar":"true","mirrorEnds":"true","plusOut":"true","nonStart":"true","commonEnd-code":"function commonEnd(a, b){\n  return (a[0] === b[0] || a[a.length - 1] === b[b.length - 1]);\n}","blackjack-code":"function blackjack(a, b){\n  if (a > 21 && b > 21)return 0;\n  if (Math.max(a, b) < 22)return Math.max(a, b);\n  else return Math.min(a, b);\n}"}