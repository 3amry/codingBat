{"xyBalance-code":"function xyBalance(str){\nlet state = true;\n  for (let i = 0; i < str.length; i++) {\n    if (str.charAt(i) === \"x\") state = false;\n    if (str.charAt(i) === \"y\") state = true;\n  }\n  return state;}","repeatFront-code":"function repeatFront(str, n){\n  let result = '';\n  for (let i = 0; i < n; i++){\n    result += str.slice(0, n - i);\n  }\n  return result;\n}","conCat-code":"function conCat(a, b){\n  if (a[a.length - 1] === b[0]){\n    return a.concat(b.slice(1));\n  }else return a.concat(b);\n}","endsLy":"true","extraFront-code":"function extraFront(str) {\n  if (str.length > 1) {\n    return str.slice(0, 2).repeat(3);\n  } else return str.repeat(3);\n}\n","starOut-code":"function starOut(str) {\n  let result = \"\";\n  for (let i = 0; i < str.length; i++) {\n    if (\n      str.charAt(i - 1) === \"*\" ||\n      str.charAt(i + 1) === \"*\" ||\n      str.charAt(i) === \"*\"\n    )\n      continue;\n    result += str.charAt(i);\n  }\n  return result;\n}","wordEnds-code":"function wordEnds(str, word){\n  let result = '';\n  for (let i = 0; i < str.length; i++){\n    if (str.slice(i, i + word.length) === word)\n      result += str.charAt(i - 1) + str.charAt(i + word.length);\n  }\n  return result;\n}","firstHalf-code":"// error on platform\nfunction firstHalf(str){\n  return str.slice(0, str.length/2)\n}","withoutString-code":"function withoutString(base, remove) {\n  let result = \"\";\n  for (let i = 0; i < base.length; i++) {\n    if (\n      base.slice(i, i + remove.length).toLowerCase() === remove.toLowerCase()\n    ) {\n      i += remove.length - 1;\n      continue;\n    }\n    result += base.charAt(i);\n  }\n  return result;\n}","frontAgain":"true","withoutEnd-code":"function withoutEnd(str){\n  return str.slice(1, str.length-1);\n}","withoutX2-code":"function withoutX2(str){\n  if (str[1] === 'x')\n    str = str[0] + str.slice(2);\n  if (str[0] === 'x')\n    str = str.slice(1);\n   return str;\n}","twoChar-code":"function twoChar(str, index){\n  if (str.length - 1 <= index || index < 0) return str.slice(0, 2);\n  return str.slice(index, index + 2);\n}","nTwice":"true","makeAbba-code":"function makeAbba(a, b){\n  return a + b +b +a;\n}","makeOutWord-code":"function makeOutWord(out, word){\n  return out.substring(0, 2) + word + out.substring(2, 4);\n}","without2":"true","prefixAgain-code":"function prefixAgain(str, n){\n  return (str.slice(n).includes(str.slice(0, n)));\n}","bobThere":"true","minCat-code":"function minCat(a, b){\n  while (a.length > b.length){\n   a = a.slice(1);\n  }\n  while (a.length < b.length){\n    b = b.slice(1);\n  }\n  return a.concat(b);\n}","repeatEnd-code":"function repeatEnd(str, n){\n  let result = '';\n  for (let i = 0; i < n; i++){\n    result += str.slice(str.length - n);\n  }\n  return result;\n}","middleThree":"true","helloName":"true","left2-code":"function left2(str){\n  return str.slice(2) + str.slice(0, 2);\n}","right2-code":"function right2(str){\n  return str.slice(str.length - 2) + str.slice(0, str.length - 2);\n}","startWord":"true","catDog-code":"function catDog(str){\n  let countCat = 0;\n  let countDog = 0;\n  for (let i = 0; i < str.length; i++){\n    if (str.slice(i, i+3) === 'cat')\n      countCat++;\n    if (str.slice(i, i+3) === 'dog')\n      countDog++;\n  }\n  return countCat === countDog;\n}","starOut":"true","lastChars-code":"function lastChars(a, b){\n  if (a === '') a += '@';\n  if (b === '') b += '@';\n  return a[0] + b[b.length - 1];\n}","maxBlock-code":"function maxBlock(str) {\n  let block = \"\";\n  let max = \"\";\n  for (let i = 0; i < str.length; i++) {\n    block = str[i];\n    for (let j = i + 1; j < str.length; j++) {\n      if (str[i] === str[j]) block += str[j];\n      if (block.length > max.length) max = block;\n      if (str[i] !== str[j]) break;\n    }\n  }\n  return max.length;\n}","makeAbba":"true","hasBad-code":"function hasBad(str){\n  let reg = 'bad';\n  return (str.slice(0, reg.length + 1).includes(reg));\n}","theEnd":"true","sumNumbers-code":"function sumNumbers(str){\nlet sum = 0;\n  let temp = \"\";\n  for (let i = 0; i < str.length; i++) {\n    let digit = parseInt(str[i]);\n    if (digit) {\n      if (parseInt(str[i + 1])) {\n        temp += str[i];\n      } else {\n        temp += str[i];\n        sum += parseInt(temp);\n        temp = \"\";\n      }\n    }\n  }\n  return sum;\n}}","countTriple-code":"function countTriple(str){\n  let count = 0;\n  for (let i = 0; i < str.length - 2; i++) {\n    if (str[i] === str[i + 1] && str[i] === str[i + 2]) count++;\n  }\n  return count;\n}","withoutX":"true","seeColor":"true","doubleChar-code":"function doubleChar(str){\n  let result = '';\n  for (let char of str){\n    result += char + char;\n  }\n  return result;\n}","sameEnds-code":"// platform error\nfunction sameEnds(nums) {\n  let result = \"\";\n  for (let i = 0; i <= nums.length / 2; i++) {\n    if (nums.slice(0, i) === nums.slice(nums.length - i))\n      result = nums.slice(0, i);\n  }\n  return result;\n}","middleTwo-code":"// paltform error\nfunction middleTwo(str) {\n  let middle = str.length / 2;\n  return str.slice(middle - 1, middle + 1);\n}","sumNumbers":"true","makeTags":"true","xyzMiddle-code":"function xyzMiddle(str){\n  for (let i = 0; i < str.length - 2; i++) {\n    if (str.slice(i, i + 3) === \"xyz\" && inMiddle(i, str)) return true;\n  }\n  return false;\n}\nfunction inMiddle(i, str) {\nlet front = str.length - (i + 3),\n    back = i,\n    difference = Math.abs(front - back);\n  return difference <= 1;}\n","gHappy-code":"function gHappy(str){\n  let happy = true;\n  for (let i = 0; i < str.length; i++){\n    if (str[i] === 'g'){\n      if (str[i+1] !== 'g' && str[i-1] !== 'g') happy = false;\n    }\n  }\n  return happy;\n}","wordEnds":"true","notReplace":"true","withoutEnd":"true","startWord-code":"function startWord(str, word){\n  if (str.slice(0, word.length)=== word ||\n     str.slice(1, word.length)=== word.slice(1))\n    return str.slice(0, word.length);\n  else return '';\n}","sameStarChar":"true","maxBlock":"true","makeOutWord":"true","oneTwo-code":"function oneTwo(str){\n  let result = '';\n  for (let i = 0; i < str.length - 2; i += 3){\n    result += str.slice(i+1, i+3) + str.charAt(i);\n  }\n  return result;\n}","deFront":"true","mixString":"true","sumDigits":"true","extraFront":"true","atFirst-code":"function atFirst(str){\n  while (str.length < 2){\n    str += '@';\n  }\n  return str.slice(0, 2); \n}","repeatSeparator":"true","mixString-code":"function mixString(a, b){\n  let result = \"\";\n  let maxLength = Math.max(a.length, b.length);\n  for (let i = 0; i < maxLength; i++) {\n    result += a.charAt(i) + b.charAt(i);\n  }\n  return result;\n}","equalIsNot":"true","firstTwo-code":"function firstTwo(str){\n  return str.slice(0,2);\n}","withoutEnd2":"true","comboString":"true","extraEnd-code":"function extraEnd(str){\n  let end = str.slice(str.length -2);\n  let result = '';\n  for (let i = 0; i < 3; i++){\n    result += end;\n  }\n  return result;\n}","lastTwo-code":"function lastTwo(str) {\n  if (str.length > 1) {\n    return (\n      str.slice(0, str.length - 2) + str[str.length - 1] + str[str.length - 2]\n    );\n  } else return str;\n}","xyzThere-code":"function xyzThere(str){\n  for (let i = 0; i < str.length -2; i++) {\n    if (str.slice(i, i + 3) === \"xyz\" && str.charAt(i-1) !== \".\") return true;\n  }\n  return false;\n}","extraEnd":"true","firstTwo":"true","endsLy-code":"function endsLy(str){\n  let end = 'ly';\n  str = str.toLowerCase();\n  return (str.slice(str.length - 2) === end);\n}","equalIsNot-code":"function equalIsNot(str){\n  let count = 0;\n  for (let i = 0; i < str.length; i++){\n    if (str.slice(i, i + 2) === 'is')count++;\n    if (str.slice(i, i + 3) === 'not')count--;\n  }\n  return count === 0;\n}","countHi":"true","nonStart":"true","notReplace-code":"function notReplace(str) {\n  let result = \"\";\n  for (let i = 0; i < str.length; i++) {\n    if (\n      (i - 1 >= 0 && isLetter(str[i - 1])) ||\n      (i + 2 < str.length && isLetter(str[i + 2]))\n    )\n      result += str[i];\n    else if (str.slice(i, i + 2) === \"is\") {\n      result += \"is not\";\n      i++;\n    }\n    else result += str[i];\n  }\n  return result;\n}\nfunction isLetter(char) {\n  return char.toLowerCase() !== char.toUpperCase();\n}","xyzMiddle":"true","comboString-code":"function comboString(a, b){\n  if (a.length > b.length){\n    return  b + a + b;\n  }else return a + b + a;\n}","endOther-code":"function endOther(a, b){\nif (a.toLowerCase().slice(-b.length) === b.toLowerCase()) {\n    return true;\n  }\n\nif (b.toLowerCase().slice(-a.length) === a.toLowerCase()) {\n    return true;\n  } \nelse return false;\n}","gHappy":"true","nonStart-code":"function nonStart(a, b){\n  return a.slice(1) + b.slice(1);\n}","countTriple":"true","prefixAgain":"true","right2":"true","sumDigits-code":"function sumDigits(str) {\n  let result = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i].toLowerCase() === str[i].toUpperCase())\n      result += parseInt(str[i]);\n  }\n  return result;\n}","conCat":"true","lastChars":"true","minCat":"true","makeTags-code":"function makeTags(tag, word){\n  return  `<${tag}>${word}</${tag}>`;\n}","countYZ-code":"function countYZ(str) {\n  let count = 0;\n  str = str.toLowerCase();\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === \"y\" || str[i] === \"z\")\n      if (\n        str.charAt(i + 1).toLowerCase() === str.charAt(i + 1).toUpperCase() ||\n        i === str.length - 1\n      )\n        count++;\n  }\n  return count;\n}","doubleChar":"true","xyzThere":"true","mirrorEnds-code":"function mirrorEnds(string) {\n  let result = \"\";\n  let temp = \"\";\n  for (let i = 0; i < string.length; i++) {\n    temp = string[i] + temp;\n    if (temp === string.slice(string.length - i - 1))\n      result = string.slice(0, i + 1);\n  }\n  return result;\n}","repeatEnd":"true","plusOut":"true","getSandwich":"true","plusOut-code":"function plusOut(str, word) {\n  let result = \"\";\n  for (let i = 0; i < str.length; i++) {\n    if (str.slice(i, i + word.length) === word) {\n      result += word;\n      i += word.length - 1;\n    } else result += \"+\";\n  }\n  return result;\n}\n","countCode-code":"function countCode(str){\n  let count = 0;\n  for (let i = 0; i < str.length-3; i++){\n    if (str.slice(i, i+2) === 'co' &&\n       str[i+3] === 'e') count++;\n  }\n  return count;\n}","zipZap-code":"function zipZap(str){\n  let result = '';\n  for (let i = 0; i < str.length; i++){\n    if (str.charAt(i - 1)=== 'z' && str.charAt(i + 1)=== 'p')\n      continue;\n    result += str.charAt(i);\n  }\n  return result;\n}","frontAgain-code":"function frontAgain(str){\n  if (str.length > 1){\n    return (str.slice(0, 2) === str.slice(str.length - 2));\n  }else return false;\n}","repeatSeparator-code":"function repeatSeparator(word, sep, count){\n  if (count === 1) return word;\n  let result = '';\n  for (let i = 0; i < count; i++){\n    result += word + sep;\n    }\n  return result.slice(0, -sep.length);\n}","middleThree-code":"function middleThree(str){\n  let middle = str.length / 2;\n  return str.slice(middle - 1, middle + 2);\n}","deFront-code":"function deFront(str){\n  if (str[0] === 'a' && str[1] === 'b') return str;\n  else if (str[0] !== 'a' && str[1] !== 'b')\n    return str.slice(2); \n  else if (str[0] === 'a') \n    return str[0] + str.slice(2) ;\n  else \n    return str.slice(1);\n}","lastTwo":"true","without2-code":"function without2(str){\n  if (str.length === 1) return str;\n  else if (str.slice(0, 2) === str.slice(str.length - 2))\n    return str.slice(2);\n  else return str;\n}","countCode":"true","helloName-code":"function helloName(name){\n  return \"Hello \" + name + \"!\";\n}","atFirst":"true","countYZ":"true","withoutX-code":"function withoutX(str){\n  if (str[0] === 'x')\n    str = str.slice(1);\n   if (str[str.length - 1] === 'x')\n    str = str.slice(0, str.length - 1);\n   return str;\n}","theEnd-code":"function theEnd(str, front){\n  if (front){\n    return str[0];\n  }else return str[str.length -1];\n}","bobThere-code":"function bobThere(str){\n  for (let i = 0; i < str.length - 2; i++){\n    if (str.charAt(i) === 'b' && str.charAt(i+2) === 'b')\n      return true;\n  }\n  return false;\n}","withoutX2":"true","oneTwo":"true","sameStarChar-code":"function sameStarChar(str){\n  for (let i = 0; i < str.length - 1; i++){\n    if (str.charAt(i) === '*' && i !== 0){\n      if str.charAt(i-1) !== str.charAt(i+1)\n      return false;\n    }\n  }\n  return true;\n}","withoutEnd2-code":"function withoutEnd2(str){\n  return str.slice(1, str.length - 1);\n}","hasBad":"true","seeColor-code":"// need regexp\nfunction seeColor(str){\n  if (str.slice(0, 3) === 'red') return 'red';\n  if (str.slice(0, 4) === 'blue') return 'blue';\n  else return '';\n}","zipZap":"true","catDog":"true","getSandwich-code":"function getSandwich(str){\n  let first = str.indexOf('bread');\n  let last = str.lastIndexOf('bread');\n  if (first !== -1 && last !== -1){\n    return str.slice(first + 5, last);\n  }\n  return '';\n}","xyBalance":"true","nTwice-code":"function nTwice(str, n){\n  return str.slice(0, n) + str.slice(str.length - n);\n}","left2":"true","endOther":"true","repeatFront":"true","twoChar":"true","mirrorEnds":"true","countHi-code":"function countHi(str){\n  let count = 0;\n  for (let i = 0; i < str.length; i++){\n    if (str.slice(i, i + 2) === 'hi')\n      count++;\n  }\n  return count;\n}"}